<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on David Neuzerling</title>
    <link>/tags/r/</link>
    <description>Recent content in R on David Neuzerling</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 19 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Printing data frames with metadata</title>
      <link>/post/printing-data-frames-with-metadata/</link>
      <pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/printing-data-frames-with-metadata/</guid>
      <description>I’m creating an R API wrapper around my state’s public transport service. To make life easier for the users, the responses from the API calls are parsed and returned as tibbles/data frames. To make life easier for me, I need to keep track of the API call behind each tibble. I do this by using the tibble::new_tibble() function to attach metadata to the tibble as attributes, and creating a custom print method to make the metadata visible.</description>
    </item>
    
    <item>
      <title>What I&#39;ve learnt about making an R package</title>
      <link>/post/what-ive-learnt-about-making-an-r-package/</link>
      <pubDate>Tue, 28 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/what-ive-learnt-about-making-an-r-package/</guid>
      <description>The last few weeks have been all about R package development for me. First I was exploring GitHub actions with the lovely people at the rOpenSci OzUnconf, and then I was off to San Francisco to learn about Building Tidy Tools with the Wickham siblings. I’ve picked up a lot about package development, so I’m documenting some of trickier things that I’ve learnt.
A great resource for package development is Hadley’s book.</description>
    </item>
    
    <item>
      <title>Model as a package</title>
      <link>/post/model-as-a-package/</link>
      <pubDate>Wed, 11 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/model-as-a-package/</guid>
      <description>There’s a concept in R of an analysis as a package, in which everything you need for your data analysis is contained within a custom package. When you install the package and build the vignettes, the data analysis is performed and results saved as a pretty HTML or PDF file, generated with R Markdown. I wanted to extend this concept to a machine learning model as a package.
The idea here is that, using vignettes, we can make equivalent installing a package with training a model.</description>
    </item>
    
    <item>
      <title>Markdown monsters</title>
      <link>/post/markdown-monsters/</link>
      <pubDate>Sun, 02 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/markdown-monsters/</guid>
      <description>Whenever I take an interest in something I think to myself, “How can I combine this with R?”
This post is the result of applying that attitude to Dungeons and Dragons.
So how would I combine D&amp;amp;D with R? A good start would be to have a nice data set of Dungeons and Dragons monsters, with all of their statistics, abilities and attributes. One of the core D&amp;amp;D rule books is the Monster Manual.</description>
    </item>
    
    <item>
      <title>How I&#39;d like to send an email from R</title>
      <link>/post/how-i-d-like-to-send-an-email-from-r/</link>
      <pubDate>Wed, 15 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/how-i-d-like-to-send-an-email-from-r/</guid>
      <description>When I found myself using R in a corporate environment, my workflow went like this:
Connect to databases Do stuff to data Email results  Yes, there exist options for presenting results that are a bit more modern than the old-fashioned email—R Markdown, Shiny, or even Slack, for example. But email is embedded in corporate culture and will be around for a long time to come.
I want to set down how I think a send_email function should work in R.</description>
    </item>
    
    <item>
      <title>useR: The Week in Review</title>
      <link>/post/user-the-week-in-review/</link>
      <pubDate>Fri, 13 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/user-the-week-in-review/</guid>
      <description>That’s it for #useR2018. After 6 keynotes, 132 parallel sessions, many more lightning talks and posters, and an all-important conference dinner, we’ve reached the end of the week.
This was my first proper conference since 2015. I had almost forgotten how it felt to be surrounded by hundreds of people who are just as passionate (if not more) about your tiny area of specialised knowledge than you are.
I took notes for the three tutorials I went to, but I wanted to take a moment to review the week as a whole, including the talks that stood out to me.</description>
    </item>
    
    <item>
      <title>useR: Missing values imputation</title>
      <link>/post/user-missing-values-imputation/</link>
      <pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/user-missing-values-imputation/</guid>
      <description>These are my notes for the third and final tutorial of useR2018, and the tutorial I was looking forward to the most. I struggle with missing value imputation. It’s one of those things which I kind of get the theory of, but fall over when trying to do. So I was keen to hear Julie Joss and Nick Tierney talk about their techniques and associated R packages.
Your dataset with missing values after mean imputation.</description>
    </item>
    
    <item>
      <title>useR: Getting started with R and Docker</title>
      <link>/post/user-getting-started-with-r-and-docker/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/user-getting-started-with-r-and-docker/</guid>
      <description>These are my notes for the super helpful tutorial given by Elizabeth Stark on the first day of the UseR 2018 conference. This was an introduction to Docker for R users who have no prior experience with Docker (which was me!).
 Elizabeth’s slides Elizabeth’s exercises and examples  This tutorial took me through setting up an RStudio Server container. I’m on a Linux machine, but I’m particularly interested by the idea that you could run these traditionally Linux-only servers on a Windows machine through Docker.</description>
    </item>
    
    <item>
      <title>useR: Recipes for data processing</title>
      <link>/post/user-recipes-for-data-processing/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/user-recipes-for-data-processing/</guid>
      <description>These are my notes for the tutorial given by Max Kuhn on the afternoon of the first day of the UseR 2018 conference.
Full confession here: I was having trouble deciding between this tutorial and another one, and eventually decided on the other one. But then I accidentally came to the wrong room and I took it as a sign that it was time to learn more about preprocessing.</description>
    </item>
    
    <item>
      <title>Scraping wine colours with R</title>
      <link>/post/scraping-wine-colours-with-r/</link>
      <pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/scraping-wine-colours-with-r/</guid>
      <description>Classifying 708 wine varieties as red, white or rosé</description>
    </item>
    
    <item>
      <title>Using R to send an Outlook email with an inline image</title>
      <link>/post/using-r-to-send-an-outlook-email-with-an-inline-image/</link>
      <pubDate>Sun, 19 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/using-r-to-send-an-outlook-email-with-an-inline-image/</guid>
      <description>If you work in a corporate environment, there’s a good chance you’re using Microsoft Office. I wanted to set up a way to email tables and plots from R using Outlook. Sending an email is simple enough with the RDCOMClient library, but inserting a plot inline—rather than as an attachment—took a little bit of working out. I’m sharing my code here in case anyone else wants to do something similar.</description>
    </item>
    
  </channel>
</rss>